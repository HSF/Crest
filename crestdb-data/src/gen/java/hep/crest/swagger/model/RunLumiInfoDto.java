/*
 * CrestDB REST API
 * Crest Rest Api to manage data for calibration files.
 *
 * OpenAPI spec version: 2.0
 * Contact: andrea.formica@cern.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hep.crest.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import javax.validation.constraints.*;

/**
 * RunLumiInfoDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-11-07T14:29:18.354+01:00")
public class RunLumiInfoDto   {
  @JsonProperty("since")
  private BigDecimal since = null;

  @JsonProperty("run")
  private BigDecimal run = null;

  @JsonProperty("lb")
  private BigDecimal lb = null;

  @JsonProperty("starttime")
  private BigDecimal starttime = null;

  @JsonProperty("endtime")
  private BigDecimal endtime = null;

  public RunLumiInfoDto since(BigDecimal since) {
    this.since = since;
    return this;
  }

   /**
   * Get since
   * @return since
  **/
  @JsonProperty("since")
  @ApiModelProperty(value = "")
  public BigDecimal getSince() {
    return since;
  }

  public void setSince(BigDecimal since) {
    this.since = since;
  }

  public RunLumiInfoDto run(BigDecimal run) {
    this.run = run;
    return this;
  }

   /**
   * Get run
   * @return run
  **/
  @JsonProperty("run")
  @ApiModelProperty(value = "")
  public BigDecimal getRun() {
    return run;
  }

  public void setRun(BigDecimal run) {
    this.run = run;
  }

  public RunLumiInfoDto lb(BigDecimal lb) {
    this.lb = lb;
    return this;
  }

   /**
   * Get lb
   * @return lb
  **/
  @JsonProperty("lb")
  @ApiModelProperty(value = "")
  public BigDecimal getLb() {
    return lb;
  }

  public void setLb(BigDecimal lb) {
    this.lb = lb;
  }

  public RunLumiInfoDto starttime(BigDecimal starttime) {
    this.starttime = starttime;
    return this;
  }

   /**
   * Get starttime
   * @return starttime
  **/
  @JsonProperty("starttime")
  @ApiModelProperty(value = "")
  public BigDecimal getStarttime() {
    return starttime;
  }

  public void setStarttime(BigDecimal starttime) {
    this.starttime = starttime;
  }

  public RunLumiInfoDto endtime(BigDecimal endtime) {
    this.endtime = endtime;
    return this;
  }

   /**
   * Get endtime
   * @return endtime
  **/
  @JsonProperty("endtime")
  @ApiModelProperty(value = "")
  public BigDecimal getEndtime() {
    return endtime;
  }

  public void setEndtime(BigDecimal endtime) {
    this.endtime = endtime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunLumiInfoDto runLumiInfoDto = (RunLumiInfoDto) o;
    return Objects.equals(this.since, runLumiInfoDto.since) &&
        Objects.equals(this.run, runLumiInfoDto.run) &&
        Objects.equals(this.lb, runLumiInfoDto.lb) &&
        Objects.equals(this.starttime, runLumiInfoDto.starttime) &&
        Objects.equals(this.endtime, runLumiInfoDto.endtime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(since, run, lb, starttime, endtime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunLumiInfoDto {\n");
    
    sb.append("    since: ").append(toIndentedString(since)).append("\n");
    sb.append("    run: ").append(toIndentedString(run)).append("\n");
    sb.append("    lb: ").append(toIndentedString(lb)).append("\n");
    sb.append("    starttime: ").append(toIndentedString(starttime)).append("\n");
    sb.append("    endtime: ").append(toIndentedString(endtime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

