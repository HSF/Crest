/*
 * CrestDB REST API
 * Crest Rest Api to manage data for calibration files.
 *
 * OpenAPI spec version: 2.0
 * Contact: andrea.formica@cern.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hep.crest.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.Date;
import javax.validation.constraints.*;

/**
 * GlobalTagDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-09-05T16:23:23.401+02:00")
public class GlobalTagDto   {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("validity")
  private BigDecimal validity = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("release")
  private String release = null;

  @JsonProperty("insertionTime")
  private Date insertionTime = null;

  @JsonProperty("snapshotTime")
  private Date snapshotTime = null;

  @JsonProperty("scenario")
  private String scenario = null;

  @JsonProperty("workflow")
  private String workflow = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("snapshotTimeMilli")
  private Long snapshotTimeMilli = null;

  @JsonProperty("insertionTimeMilli")
  private Long insertionTimeMilli = null;

  public GlobalTagDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @JsonProperty("name")
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GlobalTagDto validity(BigDecimal validity) {
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @JsonProperty("validity")
  @ApiModelProperty(value = "")
  public BigDecimal getValidity() {
    return validity;
  }

  public void setValidity(BigDecimal validity) {
    this.validity = validity;
  }

  public GlobalTagDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @JsonProperty("description")
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GlobalTagDto release(String release) {
    this.release = release;
    return this;
  }

   /**
   * Get release
   * @return release
  **/
  @JsonProperty("release")
  @ApiModelProperty(value = "")
  public String getRelease() {
    return release;
  }

  public void setRelease(String release) {
    this.release = release;
  }

  public GlobalTagDto insertionTime(Date insertionTime) {
    this.insertionTime = insertionTime;
    return this;
  }

   /**
   * Get insertionTime
   * @return insertionTime
  **/
  @JsonProperty("insertionTime")
  @ApiModelProperty(value = "")
  public Date getInsertionTime() {
    return insertionTime;
  }

  public void setInsertionTime(Date insertionTime) {
    this.insertionTime = insertionTime;
  }

  public GlobalTagDto snapshotTime(Date snapshotTime) {
    this.snapshotTime = snapshotTime;
    return this;
  }

   /**
   * Get snapshotTime
   * @return snapshotTime
  **/
  @JsonProperty("snapshotTime")
  @ApiModelProperty(value = "")
  public Date getSnapshotTime() {
    return snapshotTime;
  }

  public void setSnapshotTime(Date snapshotTime) {
    this.snapshotTime = snapshotTime;
  }

  public GlobalTagDto scenario(String scenario) {
    this.scenario = scenario;
    return this;
  }

   /**
   * Get scenario
   * @return scenario
  **/
  @JsonProperty("scenario")
  @ApiModelProperty(value = "")
  public String getScenario() {
    return scenario;
  }

  public void setScenario(String scenario) {
    this.scenario = scenario;
  }

  public GlobalTagDto workflow(String workflow) {
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @JsonProperty("workflow")
  @ApiModelProperty(value = "")
  public String getWorkflow() {
    return workflow;
  }

  public void setWorkflow(String workflow) {
    this.workflow = workflow;
  }

  public GlobalTagDto type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @JsonProperty("type")
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public GlobalTagDto snapshotTimeMilli(Long snapshotTimeMilli) {
    this.snapshotTimeMilli = snapshotTimeMilli;
    return this;
  }

   /**
   * Get snapshotTimeMilli
   * @return snapshotTimeMilli
  **/
  @JsonProperty("snapshotTimeMilli")
  @ApiModelProperty(value = "")
  public Long getSnapshotTimeMilli() {
    return snapshotTimeMilli;
  }

  public void setSnapshotTimeMilli(Long snapshotTimeMilli) {
    this.snapshotTimeMilli = snapshotTimeMilli;
  }

  public GlobalTagDto insertionTimeMilli(Long insertionTimeMilli) {
    this.insertionTimeMilli = insertionTimeMilli;
    return this;
  }

   /**
   * Get insertionTimeMilli
   * @return insertionTimeMilli
  **/
  @JsonProperty("insertionTimeMilli")
  @ApiModelProperty(value = "")
  public Long getInsertionTimeMilli() {
    return insertionTimeMilli;
  }

  public void setInsertionTimeMilli(Long insertionTimeMilli) {
    this.insertionTimeMilli = insertionTimeMilli;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalTagDto globalTagDto = (GlobalTagDto) o;
    return Objects.equals(this.name, globalTagDto.name) &&
        Objects.equals(this.validity, globalTagDto.validity) &&
        Objects.equals(this.description, globalTagDto.description) &&
        Objects.equals(this.release, globalTagDto.release) &&
        Objects.equals(this.insertionTime, globalTagDto.insertionTime) &&
        Objects.equals(this.snapshotTime, globalTagDto.snapshotTime) &&
        Objects.equals(this.scenario, globalTagDto.scenario) &&
        Objects.equals(this.workflow, globalTagDto.workflow) &&
        Objects.equals(this.type, globalTagDto.type) &&
        Objects.equals(this.snapshotTimeMilli, globalTagDto.snapshotTimeMilli) &&
        Objects.equals(this.insertionTimeMilli, globalTagDto.insertionTimeMilli);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, validity, description, release, insertionTime, snapshotTime, scenario, workflow, type, snapshotTimeMilli, insertionTimeMilli);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalTagDto {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    insertionTime: ").append(toIndentedString(insertionTime)).append("\n");
    sb.append("    snapshotTime: ").append(toIndentedString(snapshotTime)).append("\n");
    sb.append("    scenario: ").append(toIndentedString(scenario)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    snapshotTimeMilli: ").append(toIndentedString(snapshotTimeMilli)).append("\n");
    sb.append("    insertionTimeMilli: ").append(toIndentedString(insertionTimeMilli)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

