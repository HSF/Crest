package hep.crest.data.pojo;
// Generated Aug 2, 2016 3:50:25 PM by Hibernate Tools 3.2.2.GA

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import hep.crest.data.config.DatabasePropertyConfigurator;

/**
 * Tag generated by hbm2java.
 */
@Entity
@Table(name = "TAG", schema = DatabasePropertyConfigurator.SCHEMA_NAME)
public class Tag implements java.io.Serializable {

    /**
     * Serializer.
     */
    private static final long serialVersionUID = -7205518190608667851L;
    /**
     * The tag name.
     */
    private String name;
    /**
     * The time type.
     */
    private String timeType;
    /**
     * The object type.
     */
    private String objectType;
    /**
     * The synchronization.
     */
    private String synchronization;
    /**
     * The description.
     */
    private String description;
    /**
     * The last validated time.
     */
    private BigDecimal lastValidatedTime;
    /**
     * The end of validity.
     */
    private BigDecimal endOfValidity;
    /**
     * The insertion time.
     */
    private Date insertionTime;
    /**
     * The modification time.
     */
    private Date modificationTime;
    /**
     * The mapping with global tags.
     */
    private Set<GlobalTagMap> globalTagMaps = new HashSet<>(0);

    /**
     * Default ctor.
     */
    public Tag() {
    }

    /**
     * @param name
     *            the String
     */
    public Tag(String name) {
        this.name = name;
    }

    /**
     * @return String
     */
    @Id
    @Column(name = "NAME", unique = true, nullable = false, length = 255)
    public String getName() {
        return this.name;
    }

    /**
     * @param name
     *            the String
     * @return
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return String
     */
    @Column(name = "TIME_TYPE", nullable = false, length = 16)
    public String getTimeType() {
        return this.timeType;
    }

    /**
     * @param timeType
     *            the String
     * @return
     */
    public void setTimeType(String timeType) {
        this.timeType = timeType;
    }

    /**
     * @return String
     */
    @Column(name = "OBJECT_TYPE", nullable = false, length = 4000)
    public String getObjectType() {
        return this.objectType;
    }

    /**
     * @param objectType
     *            the String
     * @return
     */
    public void setObjectType(String objectType) {
        this.objectType = objectType;
    }

    /**
     * @return String
     */
    @Column(name = "SYNCHRONIZATION", nullable = false, length = 20)
    public String getSynchronization() {
        return this.synchronization;
    }

    /**
     * @param synchronization
     *            the String
     * @return
     */
    public void setSynchronization(String synchronization) {
        this.synchronization = synchronization;
    }

    /**
     * @return String
     */
    @Column(name = "DESCRIPTION", nullable = false, length = 4000)
    public String getDescription() {
        return this.description;
    }

    /**
     * @param description
     *            the String
     * @return
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * @return BigDecimal
     */
    @Column(name = "LAST_VALIDATED_TIME", nullable = false, precision = 38, scale = 0)
    public BigDecimal getLastValidatedTime() {
        return this.lastValidatedTime;
    }

    /**
     * @param lastValidatedTime
     *            the BigDecimal
     * @return
     */
    public void setLastValidatedTime(BigDecimal lastValidatedTime) {
        this.lastValidatedTime = lastValidatedTime;
    }

    /**
     * @return BigDecimal
     */
    @Column(name = "END_OF_VALIDITY", nullable = false, precision = 38, scale = 0)
    public BigDecimal getEndOfValidity() {
        return this.endOfValidity;
    }

    /**
     * @param endOfValidity
     *            the BigDecimal
     * @return
     */
    public void setEndOfValidity(BigDecimal endOfValidity) {
        this.endOfValidity = endOfValidity;
    }

    /**
     * @return Date
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "INSERTION_TIME", nullable = false, updatable = true, length = 11)
    public Date getInsertionTime() {
        if (insertionTime == null) {
            return null;
        }
        return new Date(this.insertionTime.getTime());
    }

    /**
     * @param insertionTime
     *            the Date
     * @return
     */
    public void setInsertionTime(Date insertionTime) {
        if (insertionTime != null) {
            this.insertionTime = new Date(insertionTime.getTime());
        }
    }

    /**
     * @return Date
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "MODIFICATION_TIME", nullable = false, length = 11)
    public Date getModificationTime() {
        if (modificationTime == null) {
            return null;
        }
        return new Date(this.modificationTime.getTime());
    }

    /**
     * @param modificationTime
     *            the Date
     * @return
     */
    public void setModificationTime(Date modificationTime) {
        if (modificationTime != null) {
            this.modificationTime = new Date(modificationTime.getTime());
        }
    }

    /**
     * @return Set<GlobalTagMap>
     */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "tag")
    public Set<GlobalTagMap> getGlobalTagMaps() {
        return this.globalTagMaps;
    }

    /**
     * @param globalTagMaps
     *            the Set<GlobalTagMap>
     * @return
     */
    public void setGlobalTagMaps(Set<GlobalTagMap> globalTagMaps) {
        this.globalTagMaps = globalTagMaps;
    }

    /**
     * Before saving.
     * 
     * @return
     */
    @PrePersist
    public void prePersist() {
        if (this.insertionTime == null) {
            final Timestamp now = new Timestamp(new Date().getTime());
            this.insertionTime = now;
            this.modificationTime = now;
        }
    }

    /**
     * Before updating.
     *
     * @return
     */
    @PreUpdate
    public void preUpdate() {
        if (this.modificationTime == null) {
            final Timestamp now = new Timestamp(new Date().getTime());
            this.modificationTime = now;
        }
    }

    /*
     * (non-Javadoc)
     *
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "Tag [name=" + name + ", timeType=" + timeType + ", objectType=" + objectType
                + ", synchronization=" + synchronization + ", description=" + description
                + ", lastValidatedTime=" + lastValidatedTime + ", endOfValidity=" + endOfValidity
                + ", insertionTime=" + insertionTime + ", modificationTime=" + modificationTime
                + "]";
    }

}
