package hep.crest.data.pojo;
// Generated Aug 2, 2016 3:50:25 PM by Hibernate Tools 3.2.2.GA

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import hep.crest.data.config.DatabasePropertyConfigurator;

/**
 * GlobalTag generated by hbm2java.
 * 
 * @author formica
 */
@Entity
@Table(name = "GLOBAL_TAG", schema = DatabasePropertyConfigurator.SCHEMA_NAME)
public class GlobalTag implements java.io.Serializable {
    /**
     * Serializer.
     */
    private static final long serialVersionUID = 8514805080008025991L;
    /**
     * The name.
     */
    private String name;
    /**
     * The validity.
     */
    private BigDecimal validity;
    /**
     * The description.
     */
    private String description;
    /**
     * The release.
     */
    private String release;
    /**
     * The insertion time.
     */
    private Date insertionTime;
    /**
     * The snapshot time.
     */
    private Date snapshotTime;
    /**
     * The scenario.
     */
    private String scenario;
    /**
     * The workflow.
     */
    private String workflow;
    /**
     * The type.
     */
    private char type;
    /**
     * Linked list of tags.
     */
    private Set<GlobalTagMap> globalTagMaps = new HashSet<>(0);

    /**
     * Default Ctor.
     */
    public GlobalTag() {
    }

    /**
     * @param name
     *            the String
     */
    public GlobalTag(String name) {
        this.name = name;
    }

    /**
     * @return String
     */
    @Id
    @Column(name = "NAME", unique = true, nullable = false, length = 100)
    public String getName() {
        return this.name;
    }

    /**
     * @param name
     *            the String
     * @return
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return BigDecimal
     */
    @Column(name = "VALIDITY", nullable = false, precision = 38, scale = 0)
    public BigDecimal getValidity() {
        return this.validity;
    }

    /**
     * @param validity
     *            the BigDecimal
     * @return
     */
    public void setValidity(BigDecimal validity) {
        this.validity = validity;
    }

    /**
     * @return String
     */
    @Column(name = "DESCRIPTION", nullable = false, length = 4000)
    public String getDescription() {
        return this.description;
    }

    /**
     * @param description
     *            the String
     * @return
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * @return String
     */
    @Column(name = "RELEASE", nullable = false, length = 100)
    public String getRelease() {
        return this.release;
    }

    /**
     * @param release
     *            the String
     * @return
     */
    public void setRelease(String release) {
        this.release = release;
    }

    /**
     * @return Date
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "INSERTION_TIME", nullable = false, length = 11)
    public Date getInsertionTime() {
        return this.insertionTime;
    }

    /**
     * @param insertionTime
     *            the Date
     * @return
     */
    public void setInsertionTime(Date insertionTime) {
        this.insertionTime = insertionTime;
    }

    /**
     * @return Date
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SNAPSHOT_TIME", nullable = false, length = 11)
    public Date getSnapshotTime() {
        return this.snapshotTime;
    }

    /**
     * @param snapshotTime
     *            the Date
     * @return
     */
    public void setSnapshotTime(Date snapshotTime) {
        this.snapshotTime = snapshotTime;
    }

    /**
     * @return String
     */
    @Column(name = "SCENARIO", nullable = false, length = 100)
    public String getScenario() {
        return this.scenario;
    }

    /**
     * @param scenario
     *            the String
     * @return
     */
    public void setScenario(String scenario) {
        this.scenario = scenario;
    }

    /**
     * @return String
     */
    @Column(name = "WORKFLOW", nullable = false, length = 100)
    public String getWorkflow() {
        return this.workflow;
    }

    /**
     * @param workflow
     *            the String
     * @return
     */
    public void setWorkflow(String workflow) {
        this.workflow = workflow;
    }

    /**
     * @return char
     */
    @Column(name = "TYPE", nullable = false, length = 1)
    public char getType() {
        return this.type;
    }

    /**
     * @param type
     *            the char
     * @return
     */
    public void setType(char type) {
        this.type = type;
    }

    /**
     * @return Set<GlobalTagMap>
     */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "globalTag")
    public Set<GlobalTagMap> getGlobalTagMaps() {
        return this.globalTagMaps;
    }

    /**
     * @param globalTagMaps
     *            the Set<GlobalTagMap>
     * @return
     */
    public void setGlobalTagMaps(Set<GlobalTagMap> globalTagMaps) {
        this.globalTagMaps = globalTagMaps;
    }

    /**
     * Before saving the object.
     *
     * @return
     */
    @PrePersist
    public void prePersist() {
        if (this.insertionTime == null) {
            final Timestamp now = new Timestamp(new Date().getTime());
            this.insertionTime = now;
        }
        if (this.snapshotTime == null) {
            this.snapshotTime = new Date(this.insertionTime.getTime());
        }
    }

    /*
     * (non-Javadoc)
     *
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "GlobalTag [name=" + name + ", validity=" + validity + ", description=" + description
                + ", release=" + release + ", insertionTime=" + insertionTime + ", snapshotTime="
                + snapshotTime + ", scenario=" + scenario + ", workflow=" + workflow + ", type="
                + type + "]";
    }
}
