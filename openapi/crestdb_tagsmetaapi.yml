openapi: 3.0.0

info:
  $ref: 'schemas/common.yml#/info'

servers:
  $ref: 'schemas/common.yml#/servers'

security:
  $ref: 'schemas/common.yml#/security'

tags:
  - name: tags


paths:
  /tags/{name}/meta:
    get:
      tags:
        - tags
      summary: Finds a TagMetaDto by name
      description: This method will search for a tag metadata with the given name. Only one tag should be returned.
      operationId: findTagMeta
      parameters:
        - name: name
          in: path
          description: 'name: the tag name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagMetaSetDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagMetaSetDto"
        '404':
          $ref: "#/components/responses/404"
        default:
          $ref: "#/components/responses/genericError"
    post:
      tags:
        - tags
      summary: Create a TagMeta in the database.
      description: 'This method allows to insert a TagMeta.Arguments: TagMetaDto should be provided in the body as a JSON file.'
      operationId: createTagMeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagMetaDto'
      parameters:
        - name: name
          in: path
          description: 'name: the tag name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagMetaDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagMetaDto"
        '404':
          $ref: "#/components/responses/404"
        default:
          $ref: "#/components/responses/genericError"
    put:
      tags:
        - tags
      summary: Update a TagMetaDto by name
      description: 'This method will search for a tag with the given name, and update its content for the provided body fields. Only the following fields can be updated: description, timeType, objectTime, endOfValidity, lastValidatedTime.'
      operationId: updateTagMeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericMap'
      parameters:
        - name: name
          in: path
          description: 'name: the tag name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagMetaDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagMetaDto"
        '404':
          $ref: "#/components/responses/404"
        default:
          $ref: "#/components/responses/genericError"

components:
  securitySchemes:
    $ref: 'schemas/common.yml#/components/securitySchemes'
  requestBodies:
    $ref: 'schemas/common.yml#/components/requestBodies'
  responses:
    $ref: 'schemas/common.yml#/components/responses'

  schemas:
    # commons
    HTTPResponse:
      $ref: 'schemas/common.yml#/components/schemas/HTTPResponse'
    CrestBaseResponse:
      $ref: 'schemas/common.yml#/components/schemas/CrestBaseResponse'
    RespPage:
      $ref: 'schemas/common.yml#/components/schemas/RespPage'
    GenericMap:
      $ref: 'schemas/common.yml#/components/schemas/GenericMap'

    TagMetaSetDto:
      $ref: 'schemas/tagsmeta.yml#/components/schemas/TagMetaSetDto'
    TagMetaDto:
      $ref: 'schemas/tagsmeta.yml#/components/schemas/TagMetaDto'
