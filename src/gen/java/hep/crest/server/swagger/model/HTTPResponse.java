/*
 * CREST Server
 * OpenApi3 for CREST Server
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package hep.crest.server.swagger.model;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.HashMap;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * general response object that can be used for POST and PUT methods
 */
@Schema(description = "general response object that can be used for POST and PUT methods")
@JsonPropertyOrder({
  HTTPResponse.JSON_PROPERTY_TIMESTAMP,
  HTTPResponse.JSON_PROPERTY_CODE,
  HTTPResponse.JSON_PROPERTY_ERROR,
  HTTPResponse.JSON_PROPERTY_TYPE,
  HTTPResponse.JSON_PROPERTY_MESSAGE,
  HTTPResponse.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen")
public class HTTPResponse   {
  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String JSON_PROPERTY_CODE = "code";
  @JsonProperty(JSON_PROPERTY_CODE)
  private Integer code;

  public static final String JSON_PROPERTY_ERROR = "error";
  @JsonProperty(JSON_PROPERTY_ERROR)
  private String error;

  public static final String JSON_PROPERTY_TYPE = "type";
  @JsonProperty(JSON_PROPERTY_TYPE)
  private String type;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  private String message;

  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private String id;

  public HTTPResponse timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   **/
  @JsonProperty(value = "timestamp")
  
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public HTTPResponse code(Integer code) {
    this.code = code;
    return this;
  }

  /**
   * HTTP status code of the response
   * @return code
   **/
  @JsonProperty(value = "code")
  @NotNull 
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public HTTPResponse error(String error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   **/
  @JsonProperty(value = "error")
  
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public HTTPResponse type(String type) {
    this.type = type;
    return this;
  }

  /**
   * A generic string specifying the exception type.
   * @return type
   **/
  @JsonProperty(value = "type")
  
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public HTTPResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   **/
  @JsonProperty(value = "message")
  @NotNull 
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public HTTPResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * path or URI of the requested or generated resource
   * @return id
   **/
  @JsonProperty(value = "id")
  
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPResponse htTPResponse = (HTTPResponse) o;
    return Objects.equals(timestamp, htTPResponse.timestamp) &&
        Objects.equals(code, htTPResponse.code) &&
        Objects.equals(error, htTPResponse.error) &&
        Objects.equals(type, htTPResponse.type) &&
        Objects.equals(message, htTPResponse.message) &&
        Objects.equals(id, htTPResponse.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, code, error, type, message, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPResponse {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

