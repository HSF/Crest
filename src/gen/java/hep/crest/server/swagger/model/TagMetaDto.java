/*
 * CREST Server
 * OpenApi3 for CREST Server
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package hep.crest.server.swagger.model;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.HashMap;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * TagMetaDto
 */
@JsonPropertyOrder({
  TagMetaDto.JSON_PROPERTY_TAG_NAME,
  TagMetaDto.JSON_PROPERTY_DESCRIPTION,
  TagMetaDto.JSON_PROPERTY_CHANSIZE,
  TagMetaDto.JSON_PROPERTY_COLSIZE,
  TagMetaDto.JSON_PROPERTY_TAG_INFO,
  TagMetaDto.JSON_PROPERTY_INSERTION_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen")
public class TagMetaDto   {
  public static final String JSON_PROPERTY_TAG_NAME = "tagName";
  @JsonProperty(JSON_PROPERTY_TAG_NAME)
  private String tagName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_CHANSIZE = "chansize";
  @JsonProperty(JSON_PROPERTY_CHANSIZE)
  private Integer chansize;

  public static final String JSON_PROPERTY_COLSIZE = "colsize";
  @JsonProperty(JSON_PROPERTY_COLSIZE)
  private Integer colsize;

  public static final String JSON_PROPERTY_TAG_INFO = "tagInfo";
  @JsonProperty(JSON_PROPERTY_TAG_INFO)
  private String tagInfo;

  public static final String JSON_PROPERTY_INSERTION_TIME = "insertionTime";
  @JsonProperty(JSON_PROPERTY_INSERTION_TIME)
  private OffsetDateTime insertionTime;

  public TagMetaDto tagName(String tagName) {
    this.tagName = tagName;
    return this;
  }

  /**
   * Get tagName
   * @return tagName
   **/
  @JsonProperty(value = "tagName")
  
  public String getTagName() {
    return tagName;
  }

  public void setTagName(String tagName) {
    this.tagName = tagName;
  }

  public TagMetaDto description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty(value = "description")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TagMetaDto chansize(Integer chansize) {
    this.chansize = chansize;
    return this;
  }

  /**
   * Get chansize
   * @return chansize
   **/
  @JsonProperty(value = "chansize")
  
  public Integer getChansize() {
    return chansize;
  }

  public void setChansize(Integer chansize) {
    this.chansize = chansize;
  }

  public TagMetaDto colsize(Integer colsize) {
    this.colsize = colsize;
    return this;
  }

  /**
   * Get colsize
   * @return colsize
   **/
  @JsonProperty(value = "colsize")
  
  public Integer getColsize() {
    return colsize;
  }

  public void setColsize(Integer colsize) {
    this.colsize = colsize;
  }

  public TagMetaDto tagInfo(String tagInfo) {
    this.tagInfo = tagInfo;
    return this;
  }

  /**
   * Get tagInfo
   * @return tagInfo
   **/
  @JsonProperty(value = "tagInfo")
  
  public String getTagInfo() {
    return tagInfo;
  }

  public void setTagInfo(String tagInfo) {
    this.tagInfo = tagInfo;
  }

  public TagMetaDto insertionTime(OffsetDateTime insertionTime) {
    this.insertionTime = insertionTime;
    return this;
  }

  /**
   * Get insertionTime
   * @return insertionTime
   **/
  @JsonProperty(value = "insertionTime")
  
  public OffsetDateTime getInsertionTime() {
    return insertionTime;
  }

  public void setInsertionTime(OffsetDateTime insertionTime) {
    this.insertionTime = insertionTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagMetaDto tagMetaDto = (TagMetaDto) o;
    return Objects.equals(tagName, tagMetaDto.tagName) &&
        Objects.equals(description, tagMetaDto.description) &&
        Objects.equals(chansize, tagMetaDto.chansize) &&
        Objects.equals(colsize, tagMetaDto.colsize) &&
        Objects.equals(tagInfo, tagMetaDto.tagInfo) &&
        Objects.equals(insertionTime, tagMetaDto.insertionTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tagName, description, chansize, colsize, tagInfo, insertionTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagMetaDto {\n");
    
    sb.append("    tagName: ").append(toIndentedString(tagName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    chansize: ").append(toIndentedString(chansize)).append("\n");
    sb.append("    colsize: ").append(toIndentedString(colsize)).append("\n");
    sb.append("    tagInfo: ").append(toIndentedString(tagInfo)).append("\n");
    sb.append("    insertionTime: ").append(toIndentedString(insertionTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

