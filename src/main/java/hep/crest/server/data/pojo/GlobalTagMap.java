package hep.crest.server.data.pojo;
// Generated Aug 2, 2016 3:50:25 PM by Hibernate Tools 3.2.2.GA

import hep.crest.server.config.DatabasePropertyConfigurator;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.experimental.Accessors;

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * GlobalTagMap generated by hbm2java.
 */
@Entity
@Table(name = "GLOBAL_TAG_MAP", schema = DatabasePropertyConfigurator.SCHEMA_NAME)
@Data
@Accessors(chain = true)
public class GlobalTagMap implements java.io.Serializable {

    /**
     * Serializer.
     */
    private static final long serialVersionUID = -3535546379433341349L;
    /**
     * The global tag map ID.
     * The parameter Record is used as a sort of Folder (or general tag name).
     * The parameter Label is used for a flagging of the mapping entry, to state if it has
     * to be used or not.
     */
    @EmbeddedId
    @AttributeOverride(name = "globalTagName",
            column = @Column(name = "GLOBAL_TAG_NAME", nullable = false, length = 100))
    @AttributeOverride(name = "record",
            column = @Column(name = "RECORD", nullable = false, length = 100))
    @AttributeOverride(name = "label",
            column = @Column(name = "LABEL", nullable = false, length = 100))
    private GlobalTagMapId id;
    /**
     * The Tag.
     * Reference to Tag entity object involved in the mapping.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TAG_NAME", nullable = false)
    @EqualsAndHashCode.Exclude
    @ToString.Exclude
    private Tag tag;
    /**
     * The Global Tag.
     * Reference to the global tag object involved in the mapping.
     * This same column is in the embedded ID. here in fact it is not insertable nor updatable.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "GLOBAL_TAG_NAME", nullable = false, insertable = false, updatable = false)
    @EqualsAndHashCode.Exclude
    @ToString.Exclude
    private GlobalTag globalTag;

}
