package hep.crest.server.data.pojo;
// Generated Aug 2, 2016 3:50:25 PM by Hibernate Tools 3.2.2.GA

import hep.crest.server.config.DatabasePropertyConfigurator;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;

import lombok.experimental.Accessors;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.time.Instant;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * GlobalTag generated by hbm2java.
 * 
 * @author formica
 */
@Entity
@Table(name = "GLOBAL_TAG", schema = DatabasePropertyConfigurator.SCHEMA_NAME)
@Data
@Accessors(chain = true)
@NoArgsConstructor
@ToString
@EqualsAndHashCode
public class GlobalTag implements java.io.Serializable {
    /**
     * Serializer.
     */
    private static final long serialVersionUID = 8514805080008025991L;
    /**
     * The name.
     */
    @Id
    @Column(name = "NAME", unique = true, nullable = false, length = 100)
    private String name;
    /**
     * The validity.
     */
    @Column(name = "VALIDITY", nullable = false, precision = 38, scale = 0)
    private BigDecimal validity;
    /**
     * The description.
     */
    @Column(name = "DESCRIPTION", nullable = false, length = 4000)
    private String description;
    /**
     * The release.
     */
    @Column(name = "RELEASE", nullable = false, length = 100)
    private String release;
    /**
     * The insertion time.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "INSERTION_TIME", nullable = false, updatable = false, length = 11)
    @EqualsAndHashCode.Exclude
    private Date insertionTime;
    /**
     * The snapshot time.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SNAPSHOT_TIME", nullable = false, length = 11)
    @EqualsAndHashCode.Exclude
    private Date snapshotTime;
    /**
     * The scenario.
     */
    @Column(name = "SCENARIO", nullable = false, length = 100)
    private String scenario;
    /**
     * The workflow.
     */
    @Column(name = "WORKFLOW", nullable = false, length = 100)
    private String workflow;
    /**
     * The type.
     */
    @Column(name = "TYPE", nullable = false, length = 1)
    private char type = "N".charAt(0);

    /**
     * Linked list of tags.
     */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "globalTag")
    @EqualsAndHashCode.Exclude
    @ToString.Exclude
    private Set<GlobalTagMap> globalTagMaps = new HashSet<>(0);

    /**
     * Before insertion.
     */
    @PrePersist
    public void prePersist() {
        // Check the insertion time.
        if (this.getInsertionTime() == null) {
            // Set to now.
            final Timestamp now = Timestamp.from(Instant.now());
            this.setInsertionTime(now);
        }
        if (this.snapshotTime == null) {
            this.snapshotTime = new Date(this.insertionTime.getTime());
        }
    }
}
