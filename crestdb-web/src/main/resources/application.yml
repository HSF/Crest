# ===============================
# = PROFILES /
#             server
#             ...
# ===============================
# Defaults
caching:
  iovsgroups_maxage: 600
  iovsgroups_snapshot_maxage: 3600
  iovs_maxage: 600
  iovs_snapshot_maxage: 3600
  payloads_maxage: 604800
  timetype_groupsize: 3600  # expressed in seconds
  runtype_groupsize: 100    # expressed in run numbers

# schemaname : ATLAS_PHYS_COND or none
# security options: reco (no POST allowed), weak (no authentication needed), active (GET and POST requires roles)
crest:
  dump_dir: /tmp/crest-dump/
  schemaname: none
  security: none
  synchro: none

server:
    port: 8090
    servlet-path: /
spring:
    security.strategy: MODE_INHERITABLETHREADLOCAL
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:h2:/tmp/cresth2;DB_CLOSE_ON_EXIT=FALSE
      testWhileIdle: true
      validationQuery: SELECT 1
      driverClassName: org.h2.Driver
      username: root
      password: root
---
spring:
    profiles: sqlite
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:sqlite:/tmp/crestsqlite.db
      testWhileIdle: true
      validationQuery: SELECT 1
      driverClassName: org.sqlite.JDBC
      username: 
      password:
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.SQLiteDialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: update
        hibernate.show_sql: false
---
spring:
    profiles: wildfly
    jersey:
      application-path: /crestapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=intr.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=cman1-atlas.cern.ch)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: validate
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8080 
crest:
  schemaname: ATLAS_PHYS_COND  
---
spring:
    profiles: prod
    jersey:
      application-path: /crestapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=intr.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=cman1-atlas.cern.ch)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
      dbcp2.initial-size: 7
      dbcp2.max-total: 100
      dbcp2.pool-prepared-statements: true
      tomcat.max-wait: 10000
      tomcat.max-active: 100
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 300
        hibernate.hbm2ddl.auto: validate
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8080 
    tomcat:
      max-connections: 200
crest:
  schemaname: ATLAS_PHYS_COND
---
spring:
    profiles: dev
    jersey:
      application-path: /crestapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=intr.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
      dbcp2.initial-size: 7
      dbcp2.max-total: 100
      dbcp2.pool-prepared-statements: true
      tomcat.max-wait: 10000
      tomcat.max-active: 100
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 300
        hibernate.hbm2ddl.auto: validate
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8080 
    tomcat:
      max-connections: 200
crest:
  schemaname: ATLAS_PHYS_COND
  
  
