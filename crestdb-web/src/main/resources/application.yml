# ===============================
# = PROFILES /
#             server
#             ...
# ===============================
# Defaults
caching:
  iovsgroups_maxage: 600
  iovsgroups_snapshot_maxage: 3600
  iovs_maxage: 600
  iovs_snapshot_maxage: 3600
  payloads_maxage: 604800
  timetype_groupsize: 3600  # expressed in seconds
  runtype_groupsize: 100    # expressed in run numbers

# schemaname : ATLAS_PHYS_COND or none
# security options: reco (no POST allowed), weak (no authentication needed), active (GET and POST requires roles)
crest:
  dump_dir: /tmp/crest-dump/
  schemaname: none
  security: none
  synchro: none
  webstaticdir: /tmp
  dbfile: /tmp/crestdb
  authenticationtype: none
  
server:
    port: 8090
    servlet-path: /
    compression:
      enabled: true
      
spring:
    security.strategy: MODE_INHERITABLETHREADLOCAL
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:h2:${crest.dbfile};DB_CLOSE_ON_EXIT=FALSE
      driverClassName: org.h2.Driver
      username: root
      password: root
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.H2Dialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: update
        hibernate.show_sql: false
---
spring:
    profiles: sqlite
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:sqlite:${crest.dbfile}
      driverClassName: org.sqlite.JDBC
      username: 
      password:
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.SQLiteDialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: update
        hibernate.show_sql: false
---
spring:
    profiles: wildfly
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=cman1-atlas.cern.ch)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        minimumIdle: 40
        max-lifetime: 600000
        connection-timeout: 600000
        idle-timeout: 160000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 80
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: validate
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8080 
    undertow.worker-threads: 200
    compression:
      enabled: true
    
crest:
  schemaname: ATLAS_PHYS_COND  
  webstaticdir: ${crest.web.static}
  dump_dir: ${crest.dump.dir}
---
spring:
    profiles: prod
    jersey:
      application-path: /crestapi
    datasource:
###      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=cman1-atlas.cern.ch)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=intr-s.cern.ch)(PORT=10121))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        idle-timeout: 10000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 8
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 300
# This should be changed for production to "validate"
        hibernate.hbm2ddl.auto: validate
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8443
    servlet-path: /
    compression:
      enabled: true
    ssl:
      key-alias: crest_localhost_sslserver
      key-store: classpath:ssl-crest-server.jks
      key-store-password: ${store.password}
      key-password: ${key.password}  
crest:
  schemaname: ATLAS_PHYS_COND
  webstaticdir: ${crest.web.static}
  dump_dir: ${crest.dump.dir}
  security: active
  authenticationtype: ldap
---
spring:
    profiles: dev
    jersey:
      application-path: /crestapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=intr.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=intr.cern.ch)))
      testWhileIdle: true
      validationQuery: SELECT 1 FROM DUAL
      driverClassName: oracle.jdbc.OracleDriver
      username: ATLAS_PHYS_COND_W
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        idle-timeout: 10000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 8
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.Oracle10gDialect
        hibernate.jdbc.fetch_size: 100
        hibernate.hbm2ddl.auto: none
        hibernate.show_sql: false
        hibernate.default_schema: ATLAS_PHYS_COND
server:
    port: 8080 
    tomcat:
      max-connections: 200
crest:
  schemaname: ATLAS_PHYS_COND
  webstaticdir: ${crest.web.static}
  dump_dir: ${crest.dump.dir}
  security: none
---
spring:
    profiles: postgres
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:postgresql://localhost:${crest.db.port}/crestdb
      dbcp2:
        test-while-idle: true
        validation-query: SELECT 1 
        initial-size: 7
        max-total: 100
        pool-prepared-statements: true
      driverClassName: org.postgresql.Driver
      username: formica
      password: ${crest.db.password}
      tomcat.max-wait: 10000
      tomcat.max-active: 100
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
        hibernate.jdbc.fetch_size: 300
# This should be changed for production to "validate"
        hibernate.hbm2ddl.auto: create
        hibernate.show_sql: false
        hibernate.jdbc.use_streams_for_binary: false
        hibernate.connection.autocommit: false
server:
    port: 8080 
crest:
  schemaname: none
  webstaticdir: ${crest.web.static}
  dump_dir: /tmp
  db:
    port: 6600
---
spring:
    profiles: mysql
    jersey:
      application-path: /crestapi
    datasource:
      url: jdbc:mysql://localhost:3306/crestdb
      dbcp2:
        test-while-idle: true
        validation-query: SELECT 1 
        initial-size: 7
        max-total: 100
        pool-prepared-statements: true
      driverClassName: com.mysql.jdbc.Driver
      username: root
      password: 
    jpa:
      properties:
        hibernate.dialect: org.hibernate.dialect.MySQLDialect
        hibernate.jdbc.fetch_size: 300
# This should be changed for production to "validate"
# Use create only the first time in order to create tables.
        hibernate.hbm2ddl.auto: create
        hibernate.show_sql: false
        hibernate.default_schema: crestdb
        hibernate.globally_quoted_identifiers: true
server:
    port: 8080 
crest:
  schemaname: none
  webstaticdir: ${crest.web.static}
  dump_dir: /tmp
  
 
  
