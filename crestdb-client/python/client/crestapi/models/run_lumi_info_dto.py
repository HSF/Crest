# coding: utf-8

"""
    CrestDB REST API

    Crest Rest Api to manage data for calibration files.  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: andrea.formica@cern.ch
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RunLumiInfoDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'since': 'float',
        'run': 'float',
        'lb': 'float',
        'starttime': 'float',
        'endtime': 'float'
    }

    attribute_map = {
        'since': 'since',
        'run': 'run',
        'lb': 'lb',
        'starttime': 'starttime',
        'endtime': 'endtime'
    }

    def __init__(self, since=None, run=None, lb=None, starttime=None, endtime=None):  # noqa: E501
        """RunLumiInfoDto - a model defined in Swagger"""  # noqa: E501

        self._since = None
        self._run = None
        self._lb = None
        self._starttime = None
        self._endtime = None
        self.discriminator = None

        if since is not None:
            self.since = since
        if run is not None:
            self.run = run
        if lb is not None:
            self.lb = lb
        if starttime is not None:
            self.starttime = starttime
        if endtime is not None:
            self.endtime = endtime

    @property
    def since(self):
        """Gets the since of this RunLumiInfoDto.  # noqa: E501


        :return: The since of this RunLumiInfoDto.  # noqa: E501
        :rtype: float
        """
        return self._since

    @since.setter
    def since(self, since):
        """Sets the since of this RunLumiInfoDto.


        :param since: The since of this RunLumiInfoDto.  # noqa: E501
        :type: float
        """

        self._since = since

    @property
    def run(self):
        """Gets the run of this RunLumiInfoDto.  # noqa: E501


        :return: The run of this RunLumiInfoDto.  # noqa: E501
        :rtype: float
        """
        return self._run

    @run.setter
    def run(self, run):
        """Sets the run of this RunLumiInfoDto.


        :param run: The run of this RunLumiInfoDto.  # noqa: E501
        :type: float
        """

        self._run = run

    @property
    def lb(self):
        """Gets the lb of this RunLumiInfoDto.  # noqa: E501


        :return: The lb of this RunLumiInfoDto.  # noqa: E501
        :rtype: float
        """
        return self._lb

    @lb.setter
    def lb(self, lb):
        """Sets the lb of this RunLumiInfoDto.


        :param lb: The lb of this RunLumiInfoDto.  # noqa: E501
        :type: float
        """

        self._lb = lb

    @property
    def starttime(self):
        """Gets the starttime of this RunLumiInfoDto.  # noqa: E501


        :return: The starttime of this RunLumiInfoDto.  # noqa: E501
        :rtype: float
        """
        return self._starttime

    @starttime.setter
    def starttime(self, starttime):
        """Sets the starttime of this RunLumiInfoDto.


        :param starttime: The starttime of this RunLumiInfoDto.  # noqa: E501
        :type: float
        """

        self._starttime = starttime

    @property
    def endtime(self):
        """Gets the endtime of this RunLumiInfoDto.  # noqa: E501


        :return: The endtime of this RunLumiInfoDto.  # noqa: E501
        :rtype: float
        """
        return self._endtime

    @endtime.setter
    def endtime(self, endtime):
        """Sets the endtime of this RunLumiInfoDto.


        :param endtime: The endtime of this RunLumiInfoDto.  # noqa: E501
        :type: float
        """

        self._endtime = endtime

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RunLumiInfoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
