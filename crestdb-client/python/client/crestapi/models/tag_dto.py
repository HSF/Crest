# coding: utf-8

"""
    CrestDB REST API

    Crest Rest Api to manage data for calibration files.

    OpenAPI spec version: 2.0
    Contact: andrea.formica@cern.ch
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TagDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, time_type=None, object_type=None, synchronization=None, description=None, last_validated_time=None, end_of_validity=None, insertion_time=None, modification_time=None):
        """
        TagDto - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'name': 'str',
            'time_type': 'str',
            'object_type': 'str',
            'synchronization': 'str',
            'description': 'str',
            'last_validated_time': 'float',
            'end_of_validity': 'float',
            'insertion_time': 'datetime',
            'modification_time': 'datetime'
        }

        self.attribute_map = {
            'name': 'name',
            'time_type': 'timeType',
            'object_type': 'objectType',
            'synchronization': 'synchronization',
            'description': 'description',
            'last_validated_time': 'lastValidatedTime',
            'end_of_validity': 'endOfValidity',
            'insertion_time': 'insertionTime',
            'modification_time': 'modificationTime'
        }

        self._name = name
        self._time_type = time_type
        self._object_type = object_type
        self._synchronization = synchronization
        self._description = description
        self._last_validated_time = last_validated_time
        self._end_of_validity = end_of_validity
        self._insertion_time = insertion_time
        self._modification_time = modification_time

    @property
    def name(self):
        """
        Gets the name of this TagDto.

        :return: The name of this TagDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this TagDto.

        :param name: The name of this TagDto.
        :type: str
        """

        self._name = name

    @property
    def time_type(self):
        """
        Gets the time_type of this TagDto.

        :return: The time_type of this TagDto.
        :rtype: str
        """
        return self._time_type

    @time_type.setter
    def time_type(self, time_type):
        """
        Sets the time_type of this TagDto.

        :param time_type: The time_type of this TagDto.
        :type: str
        """

        self._time_type = time_type

    @property
    def object_type(self):
        """
        Gets the object_type of this TagDto.

        :return: The object_type of this TagDto.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """
        Sets the object_type of this TagDto.

        :param object_type: The object_type of this TagDto.
        :type: str
        """

        self._object_type = object_type

    @property
    def synchronization(self):
        """
        Gets the synchronization of this TagDto.

        :return: The synchronization of this TagDto.
        :rtype: str
        """
        return self._synchronization

    @synchronization.setter
    def synchronization(self, synchronization):
        """
        Sets the synchronization of this TagDto.

        :param synchronization: The synchronization of this TagDto.
        :type: str
        """

        self._synchronization = synchronization

    @property
    def description(self):
        """
        Gets the description of this TagDto.

        :return: The description of this TagDto.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this TagDto.

        :param description: The description of this TagDto.
        :type: str
        """

        self._description = description

    @property
    def last_validated_time(self):
        """
        Gets the last_validated_time of this TagDto.

        :return: The last_validated_time of this TagDto.
        :rtype: float
        """
        return self._last_validated_time

    @last_validated_time.setter
    def last_validated_time(self, last_validated_time):
        """
        Sets the last_validated_time of this TagDto.

        :param last_validated_time: The last_validated_time of this TagDto.
        :type: float
        """

        self._last_validated_time = last_validated_time

    @property
    def end_of_validity(self):
        """
        Gets the end_of_validity of this TagDto.

        :return: The end_of_validity of this TagDto.
        :rtype: float
        """
        return self._end_of_validity

    @end_of_validity.setter
    def end_of_validity(self, end_of_validity):
        """
        Sets the end_of_validity of this TagDto.

        :param end_of_validity: The end_of_validity of this TagDto.
        :type: float
        """

        self._end_of_validity = end_of_validity

    @property
    def insertion_time(self):
        """
        Gets the insertion_time of this TagDto.

        :return: The insertion_time of this TagDto.
        :rtype: datetime
        """
        return self._insertion_time

    @insertion_time.setter
    def insertion_time(self, insertion_time):
        """
        Sets the insertion_time of this TagDto.

        :param insertion_time: The insertion_time of this TagDto.
        :type: datetime
        """

        self._insertion_time = insertion_time

    @property
    def modification_time(self):
        """
        Gets the modification_time of this TagDto.

        :return: The modification_time of this TagDto.
        :rtype: datetime
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """
        Sets the modification_time of this TagDto.

        :param modification_time: The modification_time of this TagDto.
        :type: datetime
        """

        self._modification_time = modification_time

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TagDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
